{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["libraries_table","Tokyo_Bunkyo","Tokyo_Chiyoda","Tokyo_Nerima","Univ_Air","Nagano_Azumino","Nagano_Matsumoto","should_buy","External","p","href","url","target","rel","txt","LinkButton","Button","App","Config","booklog_id","libraries","map","l","to","concat","path","length","Table","TableHead","TableRow","TableCell","TableBody","b","image_url","isbn","alt","title","src","height","encodeURI","author","pages","ButtonGroup","color","variant","reserve_url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6swXAyCMA,EAAgC,CAClC,aAAgBC,EAChB,cAAiBC,EACjB,aAAgBC,EAChB,SAAYC,EACZ,eAAkBC,EAClB,iBAAoBC,EACpB,WAAcC,GAGlB,SAASC,EAASC,GAChB,OAAO,mBAAGC,KAAMD,EAAEE,IAAKC,OAAO,SAASC,IAAI,aAApC,SAAkDJ,EAAEK,MAG7D,SAASC,EAAWN,GAChB,OAAO,cAACO,EAAA,EAAD,CAAQN,KAAMD,EAAEE,IAAKC,OAAO,SAASC,IAAI,aAAzC,SAAuDJ,EAAEK,MA6ErDG,MA1Ef,WACE,OACE,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,8CAAgB,cAACT,EAAD,CAAUG,IAAG,mCAA8BO,EAAOC,YAAcL,IAAKI,EAAOC,gBAC5F,8CAEE,+BAEID,EAAOE,UAAUC,KAAI,SAAAC,GAAC,OACpB,6BAAI,cAAC,IAAD,CAAMC,GAAE,qBAAgBD,GAAxB,SAA8BA,SAGtC,6BAAI,cAAC,IAAD,CAAMC,GAAG,wBAAT,qCAMZ,cAAC,IAAD,UACGL,EAAOE,UAAUI,OAAO,cAAcH,KAAI,SAAAC,GAAC,OAC1C,eAAC,IAAD,CAAOG,KAAI,qBAAgBH,GAA3B,UACE,6CAAgBA,EAAhB,KAAqBtB,EAAgBsB,GAAGI,OAAxC,aACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,SAGJ,cAACC,EAAA,EAAD,UACG/B,EAAgBsB,GAAGD,KAAI,SAAAW,GAAC,OACvB,eAACH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACGE,EAAEC,WACF,mBAAGvB,KAAI,oCAA+BsB,EAAEE,MAAQtB,OAAO,SAASC,IAAI,aAApE,SACE,qBAAKsB,IAAKH,EAAEI,MAAOC,IAAKL,EAAEC,UAAWK,OAAO,YAIjD,cAACR,EAAA,EAAD,UAAW,cAACtB,EAAD,CAAUG,IAAG,oCAA+BqB,EAAEE,MAAQpB,IAAKkB,EAAEI,UACxE,cAACN,EAAA,EAAD,UAAW,cAACtB,EAAD,CAAUG,IAAG,oCAA+B4B,UAAUP,EAAEQ,SAAW1B,IAAKkB,EAAEQ,WACrF,cAACV,EAAA,EAAD,UAAYE,EAAES,QACd,cAACX,EAAA,EAAD,UACE,eAACY,EAAA,EAAD,CAAaC,MAAM,UAAUC,QAAQ,YAArC,UACE,cAAC7B,EAAD,CAAYJ,IAAG,gCAA2BqB,EAAEE,MAAQpB,IAAI,UAChD,eAANQ,EACA,cAACP,EAAD,CAAYJ,IAAKqB,EAAEa,YAAa/B,IAAI,YAEpC,gCACE,cAACC,EAAD,CAAYJ,IAAG,2DAAsDqB,EAAEE,KAAxD,oDAAgHpB,IAAI,UACnI,cAACC,EAAD,CAAYJ,IAAG,kCAA6BqB,EAAEE,MAAQpB,IAAI,4CCvGzEgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e11ff02.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Config from \"./config.json\";\nimport Tokyo_Bunkyo from \"./result/Tokyo_Bunkyo.json\";\nimport Tokyo_Chiyoda from \"./result/Tokyo_Chiyoda.json\";\nimport Tokyo_Nerima from \"./result/Tokyo_Nerima.json\";\nimport Univ_Air from \"./result/Univ_Air.json\";\nimport Nagano_Azumino from \"./result/Nagano_Azumino.json\";\nimport Nagano_Matsumoto from \"./result/Nagano_Matsumoto.json\";\nimport should_buy from \"./result/should_buy.json\";\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\ninterface Book {\n    isbn: string;\n    title: string;\n    author: string;\n    publisher: string;\n    release_date: string | null;\n    pages: number | string | null;\n    price: string;\n    reserve_url: string;\n    image_url: string | null;\n}\ntype LibraryTable = {\n  [key: string]: Book[];\n};\nconst libraries_table: LibraryTable = {\n    'Tokyo_Bunkyo': Tokyo_Bunkyo,\n    'Tokyo_Chiyoda': Tokyo_Chiyoda,\n    'Tokyo_Nerima': Tokyo_Nerima,\n    'Univ_Air': Univ_Air,\n    'Nagano_Azumino': Nagano_Azumino,\n    'Nagano_Matsumoto': Nagano_Matsumoto,\n    'should_buy': should_buy,\n}\n\nfunction External(p: {url: string; txt: string;}) {\n  return <a href={p.url} target=\"_blank\" rel=\"noreferrer\">{p.txt}</a>;\n}\n\nfunction LinkButton(p: {url: string; txt: string;}) {\n    return <Button href={p.url} target=\"_blank\" rel=\"noreferrer\">{p.txt}</Button>;\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>Book shelf: <External url={`https://booklog.jp/users/${Config.booklog_id}`} txt={Config.booklog_id} /></li>\n            <li>\n              Library List\n              <ul>\n                {\n                  Config.libraries.map(l => (\n                    <li><Link to={`/book-list/${l}`}>{l}</Link></li>\n                  ))\n                }\n                <li><Link to=\"/book-list/should_buy\">Should buy</Link></li>\n              </ul>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          {Config.libraries.concat('should_buy').map(l => (\n            <Route path={`/book-list/${l}`}>\n              <h1>Book List: {l} ({libraries_table[l].length} books)</h1>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell></TableCell>\n                    <TableCell>Title</TableCell>\n                    <TableCell>Author</TableCell>\n                    <TableCell>Pages</TableCell>\n                    <TableCell></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {libraries_table[l].map(b => (\n                    <TableRow>\n                      <TableCell>\n                        {b.image_url &&\n                         <a href={`https://booklog.jp/item/1/${b.isbn}`} target=\"_blank\" rel=\"noreferrer\">\n                           <img alt={b.title} src={b.image_url} height=\"100\" />\n                         </a>\n                        }\n                      </TableCell>\n                      <TableCell><External url={`https://booklog.jp/item/1/${b.isbn}`} txt={b.title} /></TableCell>\n                      <TableCell><External url={`https://booklog.jp/author/${encodeURI(b.author)}`} txt={b.author} /></TableCell>\n                      <TableCell>{b.pages}</TableCell>\n                      <TableCell>\n                        <ButtonGroup color=\"primary\" variant=\"contained\">\n                          <LinkButton url={`https://calil.jp/book/${b.isbn}`} txt=\"Calil\" />\n                          {(l !== \"should_buy\") ? (\n                            <LinkButton url={b.reserve_url} txt=\"Reserve\" />\n                          ) : (\n                            <div>\n                              <LinkButton url={`https://www.e-hon.ne.jp/bec/SA/Forward?spKeyword=${b.isbn}&button=btnSpeed&mode=kodawari_header&ctlB9Flg=1`} txt=\"e-hon\" />\n                              <LinkButton url={`https://amazon.co.jp/dp/${b.isbn}`} txt=\"Amazon\" />\n                            </div>\n                          )}\n                        </ButtonGroup>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Route>\n          ))\n          }\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}